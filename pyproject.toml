[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "testdatagen"
version = "0.1.0"
description = "Domain-Specific Language for Test Data Generation"
authors = [{name = "TestDataGen Team", email = "team@testdatagen.dev"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["testing", "data-generation", "dsl", "faker"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Database",
]

dependencies = [
    # Core dependencies
    "antlr4-python3-runtime>=4.13.0",
    "pydantic>=2.5.0",
    "jinja2>=3.1.0",
    
    # Data manipulation
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "pyarrow>=13.0.0",  # For Parquet support
    
    # Database
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",      # PostgreSQL async
    "aiomysql>=0.2.0",      # MySQL async
    "aiosqlite>=0.19.0",    # SQLite async
    
    # CLI and UI
    "click>=8.1.0",
    "rich>=13.6.0",
    "typer>=0.9.0",         # Alternative to Click with type hints
    
    # Data generation
    "faker>=20.0.0",
    
    # Web API
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    
    # Language Server
    "pygls>=1.1.0",         # Generic Language Server
    
    # Utilities
    "pyyaml>=6.0.1",
    "toml>=0.10.2",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.2.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "hypothesis>=6.88.0",
    
    # Code quality
    "black>=23.9.0",
    "ruff>=0.1.0",          # Fast linter (replaces flake8, isort)
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    
    # Documentation
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    
    # Development tools
    "ipython>=8.16.0",
    "jupyter>=1.0.0",
]

web = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
]

lsp = [
    "pygls>=1.1.0",
]

all = [
    "testdatagen[dev,web,lsp]"
]

[project.urls]
Homepage = "https://github.com/testdatagen/testdatagen"
Documentation = "https://testdatagen.readthedocs.io"
Repository = "https://github.com/testdatagen/testdatagen"
Changelog = "https://github.com/testdatagen/testdatagen/blob/main/CHANGELOG.md"

[project.scripts]
testdatagen = "testdatagen.cli.main:main"
tdg = "testdatagen.cli.main:main"
testdatagen-lsp = "testdatagen.lsp.server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=testdatagen",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "i18n: marks tests that use internationalization",
]
